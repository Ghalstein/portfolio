{"version":3,"sources":["components/Project.js","containers/Projects.js","containers/About.js","containers/Home.js","components/Links.js","containers/Header.js","components/ContactBody.js","containers/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Project","ops","width","height","playerVars","autoplay","openGitHub","link","window","open","focus","render","className","onClick","src","YouTube","videoId","opts","onReady","_onReady","React","Component","Projects","About","Home","style","color","fontSize","strings","typeSpeed","backSpeed","Links","class","id","to","Header","ContactBody","state","showEmail","openEmail","setState","openLinkedIn","openMedium","href","Contact","App","basename","Fragment","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7446eafc.chunk.js","sourcesContent":["import React from 'react';\nimport Tilt from 'react-tilt';\nimport YouTube from 'react-youtube';\n\nclass Project extends React.Component {\n\t\n\tops = {\n    width: '300vw',\n    height: '200vh',\n    playerVars: { // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  }\n\n  openGitHub = (link) => {\n\t\t// debugger\n\t  let win = window.open(`https://github.com/Ghalstein/${link}`, '_blank');\n\t  win.focus();\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div className=\"my-projects\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<Tilt >\n\t\t\t\t\t\t<h1 className=\"PageTitle\"> My Projects</h1>\n\t\t\t\t\t</Tilt>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"video\">\n\t\t\t\t\t<h3 className=\"video-tag\">Facebook Clone (Furbook) - Built with React/Redux and a Rails API</h3>\n\t\t\t\t\t\t<ul className=\"description\">\n\t\t\t\t\t\t\t<li>+ Developed a Rails API backend with endpoints for users, posts, comments, pictures, friendships and messages.</li>\n\t\t\t\t\t\t\t<li>+ Utilized JSON Web Tokens and local storage to store encrypted user information client-side and bcrypt server-side.</li>\n\t\t\t\t\t\t\t<li>+ Used Active Storage and Google Cloud Platform to upload and display pictures throughout the application.</li>\n\t\t\t\t\t\t\t<li>+ Managed state and user interactions with React and Redux.</li>\n\t\t\t\t\t\t\t<li>+ Implemented user interface with fully CSS styling.</li>\n\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t<Tilt  className=\"tilt\">\n\t\t\t\t\t\t<img onClick={() => this.openGitHub('furbook-frontend')} className=\"icon\" src=\"https://i.dlpng.com/static/png/4033681_preview.png\" />\n\t\t\t\t\t</Tilt>\n\t\t\t\t\t<YouTube\n\t\t        videoId=\"8eRqKUlNYiA\"\n\t\t        opts={this.ops}\n\t\t        onReady={this._onReady}\n\t\t      />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"video\">\n\t\t\t\t\t<h3 className=\"video-tag\">Trello Clone (Chello) - Built with React and a Rails API</h3>\n\t\t\t\t\t<ul className=\"description\">\n\t\t\t\t\t\t<li>+ Developed a Rails API backend with endpoints for users, projects, lists and tasks.</li>\n\t\t\t\t\t\t<li>+ Utilized JSON Web Tokens and local storage to store encrypted user information client-side and bcrypt server-side.</li>\n\t\t\t\t\t\t<li>+ Utilized components and their life cycles, props and states via Reactâ€™s structural hierarchy.</li>\n\t\t\t\t\t\t<li>+ Implemented user interface with fully CSS styling.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Tilt className=\"tilt\">\n\t\t\t\t\t\t<img onClick={() => this.openGitHub('tGRAH-front-end')} className=\"icon\" src=\"https://i.dlpng.com/static/png/4033681_preview.png\" />\n\t\t\t\t\t</Tilt>\n\t\t\t\t\t<YouTube\n\t\t        videoId=\"vYR5io-r43Q\"\n\t\t        opts={this.ops}\n\t\t        onReady={this._onReady}\n\t\t      />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"video\">\n\t\t\t\t\t<h3 className=\"video-tag\">myStocks - Built with VanillaJS with a Rails Backend</h3>\n\t\t\t\t\t<ul className=\"description\">\n\t\t\t\t\t\t<li>+ Developed a Rails API backend with endpoints for users, watchlists and stocks.</li>\n\t\t\t\t\t\t<li>+ Developed the frontend reactivity completely in Vanilla Javascript. </li>\n\t\t\t\t\t\t<li>+ Scraped a stock API to provide accurate real time data upon every stock requested.</li>\n\t\t\t\t\t\t<li>+ Implemented user interface with fully CSS styling.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Tilt className=\"tilt\">\n\t\t\t\t\t\t<img onClick={() => this.openGitHub('Stocks')} className=\"icon\" src=\"https://i.dlpng.com/static/png/4033681_preview.png\" />\n\t\t\t\t\t</Tilt>\n\t\t\t\t\t<YouTube\n\t\t        videoId=\"FD5SZM5NosQ\"\n\t\t        opts={this.ops}\n\t\t        onReady={this._onReady}\n\t\t      />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Project;","import React from 'react';\nimport Project from '../components/Project';\n\nclass Projects extends React.Component {\n\n\trender = () => {\n\t\treturn (\n\t\t\t<Project />\n\t\t)\n\t}\n}\n\nexport default Projects;","import React from 'react';\nimport Tilt from 'react-tilt';\n\nclass About extends React.Component {\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"about-me-with-pic\" >\n\t\t\t\t\t<img className=\"me\" src=\"https://media.licdn.com/dms/image/C4E03AQH-D7QbgeY--w/profile-displayphoto-shrink_200_200/0?e=1574294400&v=beta&t=i87RMu3CnhWXOzhfQkp7DLDCktL21ODLEbO-N0Ae28E\"/>\n\t\t\t\t\t<Tilt >\n\t\t\t\t\t\t<h1 className=\"PageTitle about-me\"> About me </h1>\n\t\t\t\t\t</Tilt>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-blurb\">\n\t\t\t\t\tHi. I am a Fullstack developer with a passion for building, teaching and learning. I have experience in Java, Ruby on Rails, JavaScript, React, Redux and a background in Chemistry and Quantitative Sciences. I discovered software development through my university classes and have enjoyed challenging myself with projects since. I love collaborating, analyzing data and taking on new challenges. \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default About;","import React from 'react';\nimport Typed from 'react-typed';\n\nclass Home extends React.Component {\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div className=\"typewriter\"> \n\t\t\t\t<Typed style={{color: '#FFFFFF', fontSize: 64}}\n\t        strings={[\n\t          'Hello, welcome to my page.',\n\t          'Please, explore my projects',\n\t          'Please, explore my accomplishments.']}\n\t          typeSpeed={45}\n\t          backSpeed={30}\n\t\t\t\t\t\t>\n\t      </Typed>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Links extends React.Component {\n\trender = () => {\n\t\treturn (\n\t\t\t<ul class=\"main-nav\" id=\"js-menu\">\n\t\t\t\t<li><Link to=\"/\" className=\"nav-links\" style={{color: '#FFFFFF'}}>Home</Link></li>\n\t\t\t  <li><Link to='/projects' className=\"nav-links\" style={{color: '#FFFFFF'}} >Projects</Link></li>\n\t\t\t  <li><Link to=\"/about\" className=\"nav-links\" style={{color: '#FFFFFF'}}>About</Link></li>\n\t\t\t  <li><Link to=\"/contact\" className=\"nav-links\" style={{color: '#FFFFFF'}}>Contact</Link></li>\n\t\t\t</ul>\n\t\t)\n\t}\n}\n\nexport default Links;\n","import React from 'react';\nimport Links from '../components/Links'\n\n\nclass Header extends React.Component {\n\n\trender = () => {\n\t\treturn (\n\t\t\t<nav className=\"navbar\">\n\t\t\t\t<span className=\"navbar-toggle\" id=\"js-navbar-toggle\">\n            <i className=\"fas fa-bars\"></i>\n        </span>\n\t\t\t\t<Links />\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Header;","import React from 'react';\nimport Tilt from 'react-tilt';\n\nclass ContactBody extends React.Component {\n\n\tstate = {\n\t\tshowEmail: false\n\t}\n\n\topenGitHub = () => {\n\t\t// debugger\n\t  let win = window.open(\"https://github.com/Ghalstein\", '_blank');\n\t  win.focus();\n\t}\n\n\topenEmail = () => {\n\t\tthis.setState({showEmail: !this.state.showEmail})\n\t}\n\n\topenLinkedIn = () => {\n\t\tlet win = window.open(\"https://www.linkedin.com/in/garretthalstein/\", '_blank');\n\t  win.focus();\n\t}\n\n\topenMedium = () => {\n\t\tlet win = window.open(\"https://medium.com/@ghalstein97\", '_blank');\n\t  win.focus();\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"contacts\">\n\t\t\t\t\t<div className=\"contact-item\" onClick={this.openGitHub}>\n\t\t\t\t\t\t<div className=\"img-div\">\n\t\t\t\t\t\t\t<Tilt className=\"Tilt\" >\n\t\t\t\t\t\t\t\t<img className=\"icons\" src=\"https://i.dlpng.com/static/png/4033681_preview.png\" />\n\t\t\t\t\t\t\t</Tilt>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div> Github </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"contact-item\" onClick={this.openLinkedIn}>\n\t\t\t\t\t\t<div className=\"img-div\">\t\t\t\t\t\n\t\t\t\t\t\t\t<Tilt className=\"Tilt\" >\n\t\t\t\t\t\t\t\t<img className=\"icons linkedIn\" src=\"https://www.freepnglogos.com/uploads/linkedin-in-logo-png-1.png\" />\n\t\t\t\t\t\t\t</Tilt>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div> LinkedIn </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contacts\">\n\t\t\t\t\t<div className=\"contact-item\" onClick={this.openMedium}>\n\t\t\t\t\t\t<div className=\"img-div\">\t\t\t\t\t\n\t\t\t\t\t\t\t<Tilt className=\"Tilt\" >\n\t\t\t\t\t\t\t\t<img className=\"icons\" src=\"https://www.stickpng.com/assets/images/5841c47ba6515b1e0ad75aa3.png\" />\n\t\t\t\t\t\t\t</Tilt>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div> Medium </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a className=\"mail-to\" href=\"mailto:ghalstein97@gmail.com?\">\n\t\t\t\t\t\t<div className=\"contact-item\">\n\t\t\t\t\t\t\t<div className=\"img-div\">\t\t\t\n\t\t\t\t\t\t\t\t<Tilt className=\"Tilt\" >\n\t\t\t\t\t\t\t\t\t<img className=\"icons\" src=\"https://www.freepnglogos.com/uploads/logo-gmail-png/logo-gmail-png-gmail-icon-download-png-and-vector-1.png\" />\n\t\t\t\t\t\t\t\t</Tilt>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>ghalstein97@gmail.com </div>\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default ContactBody;","import React from 'react';\nimport ContactBody from '../components/ContactBody';\nimport Tilt from 'react-tilt';\n\n\nclass Contact extends React.Component {\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div className=\"ContactPage\">\n\t\t\t\t<div className=\"Connect\">\n\t\t\t\t\t<Tilt>\n\t\t\t\t\t\t<h1 className=\"PageTitle\"> Connect With Me</h1>\n\t\t\t\t\t</Tilt>\n\t\t\t\t</div>\n\t\t\t\t<ContactBody />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Contact;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Projects from './containers/Projects';\nimport About from './containers/About';\nimport Home from './containers/Home';\nimport Header from './containers/Header';\nimport Contact from './containers/Contact';\n\n\nclass App extends React.Component {\n  render = () => {\n    return (\n      <HashRouter basename='/'>\n        <React.Fragment>\n          <Header />\n          <Switch>\n            <Route exact path=\"/projects\" component={Projects}/>\n            <Route exact path=\"/about\" component={About}/>\n            <Route exact path=\"/contact\" component={Contact}/>\n            <Route path=\"/\" component={Home}/>\n          </Switch>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}